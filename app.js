"use strict";function createNode(e){const t=document.getElementById("forCopy");return t.textContent=e,t}function copyNode(e){if("clipboard"in navigator)return navigator.clipboard.writeText(e.textContent||"");const t=getSelection();if(null===t)return Promise.reject(new Error);t.removeAllRanges();const o=document.createRange();return o.selectNodeContents(e),t.addRange(o),document.execCommand("copy"),t.removeAllRanges(),Promise.resolve()}function copyText(e){if("clipboard"in navigator)return navigator.clipboard.writeText(e);const{body:t}=document;if(!t)return Promise.reject(new Error);const o=createNode(e);return t.appendChild(o),copyNode(o),t.removeChild(o),Promise.resolve()}function getErrorText(e){const t=encodeURI(e);return e.startsWith("http://")||e.startsWith("https://")?`\n    Could not fetch from URL <em><a href="${t}">${t}</a></em>.<br>\n    Your issue could be one of the following:\n    <ul>\n        <li>The URL does not exist.\n        <li>The URL does not support <a href="https://developer.mozilla.org/en-US/docs/Web/HTTP/CORS">Cross-Origin Resource Sharing (CORS)</a>,\n            when it should send a response header like <code>Access-Control-Allow-Origin: *</code>\n    </ul>\n    Please see your <a href="https://developer.mozilla.org/en-US/docs/Tools">Browser Developer Tools</a> for additional details.\n    `:`Could not fetch from <em>${t}</em>, which doesn't look like a valid URL.`}function resetInterface(){console.log("Please ignore SRI warnings above this line, as they are part of the SRI support check (badge at the bottom of the page)."),document.getElementById("sriSnippet").innerText="",document.getElementById("sriError").innerText="",document.getElementById("sriCopy")&&document.getElementById("sriCopy").remove(),document.getElementById("sriSnippet").classList.remove("is-active")}async function hashText(e){const t=(new TextEncoder).encode(e);return await crypto.subtle.digest("SHA-384",t)}function parseContentType(e){if(!e)return"script";const t=e.split(";");return/^text\/css$/.test(t[0])?"style":"script"}async function integrityMetadata(e){const t=await hashText(e);return`sha384-${btoa(String.fromCharCode(...new Uint8Array(t)))}`}async function displayResult(e,t,o,n){const r=await integrityMetadata(n);if(e.classList.add("is-active"),"script"===o){const o=`<span style="color: #ffa07a">&lt;script src=</span><span style="color:#abe338">&quot;${encodeURI(t)}&quot;</span> <span style="color: #ffa07a">integrity=</span><span style="color:#abe338">&quot;${r}&quot;</span> <span style="color: #ffa07a">crossorigin=</span><span style="color:#abe338">&quot;anonymous&quot;</span><span style="color: #ffa07a">&gt;&lt;/script&gt;</span>`;e.innerHTML=o}else{const o=`<span style="color: #ffa07a">&lt;link rel=<span style="color:#abe338">"stylesheet"</span> href=</span><span style="color:#abe338">&quot;${encodeURI(t)}&quot;</span> <span style="color: #ffa07a">integrity=</span><span style="color:#abe338">&quot;${r}&quot;</span> <span style="color: #ffa07a">crossorigin=</span><span style="color:#abe338">&quot;anonymous&quot;</span><span style="color: #ffa07a">&gt;</span>`;e.innerHTML=o}console.log("It's working"),e.insertAdjacentHTML("afterend",'<button id="sriCopy">Copy</button>'),document.getElementById("sriCopy").addEventListener("click",(()=>{copyText(e.innerText)}))}async function formSubmit(e){e.preventDefault(),resetInterface();const t=document.getElementById("url").value,o=document.getElementById("sriSnippet"),n=document.getElementById("sriError");console.info("Trying",t);try{const e=await fetch(t);if(console.info("Response",e),200===e.status){displayResult(o,t,parseContentType(e.headers.get("content-type")),await e.text())}else console.error("Non-OK HTTP response status. Error."),n.innerHTML=getErrorText(t)}catch(e){console.error("Fetch Error: ",e),n.innerHTML=getErrorText(t)}}addEventListener("DOMContentLoaded",(()=>{document.getElementById("sriForm").addEventListener("submit",formSubmit)}));
